-- Insert sample data for testing (only if no data exists)

-- Note: This will only work after a user signs up and confirms their email
-- The actual user_id will be generated by Supabase auth

-- Sample phone numbers (these will be inserted via the application after user signup)
-- INSERT INTO public.phone_numbers (number, provider, status, reputation_score, user_id)
-- VALUES 
--   ('+1234567890', 'Twilio', 'active', 95, 'user_id_here'),
--   ('+1234567891', 'Twilio', 'active', 88, 'user_id_here'),
--   ('+1234567892', 'Vonage', 'active', 92, 'user_id_here'),
--   ('+1234567893', 'Twilio', 'inactive', 75, 'user_id_here');

-- Sample cadence (will be inserted via application)
-- INSERT INTO public.cadences (name, description, phone_numbers, rotation_strategy, user_id)
-- VALUES (
--   'Sales Outreach A',
--   'Primary sales cadence for lead generation',
--   ARRAY['phone_id_1', 'phone_id_2', 'phone_id_3']::UUID[],
--   'reputation_based',
--   'user_id_here'
-- );

-- Create a view for dashboard metrics
CREATE OR REPLACE VIEW public.dashboard_metrics AS
SELECT 
  u.id as user_id,
  COUNT(DISTINCT pn.id) as total_numbers,
  COUNT(DISTINCT CASE WHEN pn.status = 'active' THEN pn.id END) as active_numbers,
  COUNT(DISTINCT CASE WHEN pn.status = 'spam' THEN pn.id END) as spam_numbers,
  AVG(pn.reputation_score) as avg_reputation,
  COUNT(DISTINCT c.id) as total_cadences,
  COUNT(DISTINCT CASE WHEN c.is_active THEN c.id END) as active_cadences,
  COUNT(calls.id) as total_calls_today,
  COUNT(CASE WHEN calls.status = 'success' THEN 1 END) as successful_calls_today,
  COUNT(CASE WHEN calls.status = 'spam_detected' THEN 1 END) as spam_calls_today
FROM public.users u
LEFT JOIN public.phone_numbers pn ON u.id = pn.user_id
LEFT JOIN public.cadences c ON u.id = c.user_id
LEFT JOIN public.calls calls ON u.id = calls.user_id AND calls.call_time >= CURRENT_DATE
GROUP BY u.id;

-- Grant necessary permissions
GRANT SELECT ON public.dashboard_metrics TO authenticated;
